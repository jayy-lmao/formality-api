{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/app/pages/register.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($email: String!, $password: String!) {\\n        createUser(data: { email: $email, password: $password }) {\\n            id\\n            email\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nvar REGISTER_USER = gql(_templateObject());\n\nvar Register = function Register() {\n  var _useMutation = useMutation(REGISTER_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      registerUser = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(_ref) {\n      var email = _ref.email,\n          password = _ref.password;\n      registerUser({\n        variables: {\n          email: email,\n          password: password\n        }\n      }).then(function (_ref2) {\n        var createUser = _ref2.data.createUser;\n        console.log(createUser);\n      })[\"catch\"](function (errorResponse) {\n        // console.log({name: errorResponse.name, message: errorResponse.message})\n        if (errorResponse.message.includes(\"duplicate key error\")) {\n          console.error(\"User Already Exists\");\n        }\n      });\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Email address\", __jsx(\"input\", {\n    name: \"email\",\n    id: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Email address\", __jsx(\"input\", {\n    name: \"password\",\n    id: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"SignUp\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["/app/pages/register.tsx"],"names":["React","useFormik","gql","useMutation","REGISTER_USER","Register","registerUser","data","formik","initialValues","email","password","onSubmit","variables","then","createUser","console","log","errorResponse","message","includes","error","handleSubmit","handleChange","values"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,IAAMC,aAAa,GAAGF,GAAH,mBAAnB;;AASA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,qBACgBF,WAAW,CAACC,aAAD,CAD3B;AAAA;AAAA,MACXE,YADW;AAAA,MACKC,IADL,oBACKA,IADL;;AAEnB,MAAMC,MAAM,GAAGP,SAAS,CAAC;AACrBQ,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADM;AAKrBC,IAAAA,QAAQ,EAAE,wBAAyB;AAAA,UAAtBF,KAAsB,QAAtBA,KAAsB;AAAA,UAAfC,QAAe,QAAfA,QAAe;AAC/BL,MAAAA,YAAY,CAAC;AACTO,QAAAA,SAAS,EAAE;AACPH,UAAAA,KAAK,EAALA,KADO;AAEPC,UAAAA,QAAQ,EAARA;AAFO;AADF,OAAD,CAAZ,CAMKG,IANL,CAMU,iBAA8B;AAAA,YAAnBC,UAAmB,SAA3BR,IAA2B,CAAnBQ,UAAmB;AAChCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,OARL,WASW,UAACG,aAAD,EAA0B;AAC7B;AACA,YAAIA,aAAa,CAACC,OAAd,CAAsBC,QAAtB,CAA+B,qBAA/B,CAAJ,EAA2D;AACvDJ,UAAAA,OAAO,CAACK,KAAR,CAAc,qBAAd;AACH;AACJ,OAdL;AAeH;AArBoB,GAAD,CAAxB;AAwBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEb,MAAM,CAACc,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,EAAEd,MAAM,CAACe,YAJrB;AAKI,IAAA,KAAK,EAAEf,MAAM,CAACgB,MAAP,CAAcd,KALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAWI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAEF,MAAM,CAACe,YAJrB;AAKI,IAAA,KAAK,EAAEf,MAAM,CAACgB,MAAP,CAAcb,QALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXJ,EAqBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CADJ,CADJ;AA2BH,CArDD;;AAuDA,eAAeN,QAAf","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nconst REGISTER_USER = gql`\n    mutation($email: String!, $password: String!) {\n        createUser(data: { email: $email, password: $password }) {\n            id\n            email\n        }\n    }\n`;\n\nconst Register = () => {\n    const [ registerUser, { data } ] = useMutation(REGISTER_USER);\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n        },\n        onSubmit: ({ email, password }) => {\n            registerUser({\n                variables: {\n                    email,\n                    password,\n                },\n            })\n                .then(({ data: { createUser } }) => {\n                    console.log(createUser);\n                })\n                .catch((errorResponse: Error) => {\n                    // console.log({name: errorResponse.name, message: errorResponse.message})\n                    if (errorResponse.message.includes(\"duplicate key error\")) {\n                        console.error(\"User Already Exists\");\n                    }\n                });\n        },\n    });\n\n    return (\n        <div>\n            <form onSubmit={formik.handleSubmit}>\n                <label htmlFor=\"email\">\n                    Email address\n                    <input\n                        name=\"email\"\n                        id=\"email\"\n                        type=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Email address\n                    <input\n                        name=\"password\"\n                        id=\"password\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                </label>\n                <button type=\"submit\">SignUp</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}