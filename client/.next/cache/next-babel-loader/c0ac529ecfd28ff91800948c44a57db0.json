{"ast":null,"code":"import ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport withApollo from 'next-with-apollo'; // import { endpoint } from '../config';\n\nconst endpoint = 'http://localhost:4000/graphql';\nconst cache = new InMemoryCache(); // const createClient = ({ headers }: { headers?: any }) => {\n//   return new ApolloClient({\n//     request: operation => {\n//       operation.setContext({\n//         fetchOptions: {\n//           credentials: 'include',\n//         },\n//         headers,\n//       });\n//     },\n//     uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n//     cache\n//   });\n// }\n\nconst createClient = ({\n  headers\n}) => {\n  return new ApolloClient({\n    request: operation => {\n      const token = localStorage.getItem('ACCESS_TOKEN');\n      operation.setContext({\n        headers: {\n          authorization: token ? `Bearer ${token}` : ''\n        }\n      });\n    },\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    cache\n  });\n};\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/home/jayy-lmao/Frameworks/Graphql/formality/client/lib/withData.ts"],"names":["ApolloClient","InMemoryCache","withApollo","endpoint","cache","createClient","headers","request","operation","token","localStorage","getItem","setContext","authorization","uri","process","env","NODE_ENV"],"mappings":"AAAA,OAAOA,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AAEA,OAAOC,UAAP,MAAuB,kBAAvB,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,KAAK,GAAG,IAAIH,aAAJ,EAAd,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoC;AACvD,SAAO,IAAIN,YAAJ,CAAiB;AACtBO,IAAAA,OAAO,EAAGC,SAAD,IAAe;AACtB,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACAH,MAAAA,SAAS,CAACI,UAAV,CAAqB;AACnBN,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAEJ,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AADU,OAArB;AAKD,KARqB;AAStBK,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCd,QAAzC,GAAoDA,QATnC;AAUtBC,IAAAA;AAVsB,GAAjB,CAAP;AAYD,CAbD;;AAeA,eAAeF,UAAU,CAACG,YAAD,CAAzB","sourcesContent":["import ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { HttpLink } from 'apollo-link-http';\nimport withApollo from 'next-with-apollo';\n// import { endpoint } from '../config';\n\nconst endpoint = 'http://localhost:4000/graphql';\nconst cache = new InMemoryCache();\n\n\n// const createClient = ({ headers }: { headers?: any }) => {\n//   return new ApolloClient({\n//     request: operation => {\n//       operation.setContext({\n//         fetchOptions: {\n//           credentials: 'include',\n//         },\n//         headers,\n//       });\n//     },\n//     uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n//     cache\n//   });\n// }\n\nconst createClient = ({ headers }: { headers?: any }) => {\n  return new ApolloClient({\n    request: (operation) => {\n      const token = localStorage.getItem('ACCESS_TOKEN');\n      operation.setContext({\n        headers: {\n          authorization: token ? `Bearer ${token}` : ''\n        }\n      })\n    },\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    cache\n  })\n}\n\nexport default withApollo(createClient);"]},"metadata":{},"sourceType":"module"}