{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/formality-api/client/components/LoginForm.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst LOGIN = gql`\nquery($email: String, $password: String) {\n    login(email: $email,password: $password){\n      token\n    }\n  }\n`;\n\nconst login = (email, password) => {\n  console.log({\n    email,\n    password\n  });\n  const {\n    loading,\n    data\n  } = useQuery(LOGIN, {\n    variables: {\n      email,\n      password\n    }\n  });\n  console.log({\n    loading,\n    data\n  });\n};\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  const username = event.target.username.value;\n  const password = event.target.password.value;\n  login(username, password);\n};\n\nconst LoginForm = () => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, __jsx(\"form\", {\n  onSubmit: handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, __jsx(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"Username:\", __jsx(\"input\", {\n  name: \"username\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})), __jsx(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Password:\", __jsx(\"input\", {\n  name: \"password\",\n  type: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n})), __jsx(\"input\", {\n  type: \"submit\",\n  value: \"Submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n})));\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/james/Documents/formality-api/client/components/LoginForm.tsx"],"names":["React","useQuery","gql","LOGIN","login","email","password","console","log","loading","data","variables","handleSubmit","event","preventDefault","username","target","value","LoginForm"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAGA,MAAMC,KAAK,GAAGD,GAAI;;;;;;CAAlB;;AAgBA,MAAME,KAAK,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAqC;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAZ;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBT,QAAQ,CAC9BE,KAD8B,EAE9B;AAAEQ,IAAAA,SAAS,EAAE;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAb,GAF8B,CAAlC;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAZ;AACH,CAPD;;AASA,MAAME,YAAY,GAAIC,KAAD,IAAgB;AACjCA,EAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaD,QAAb,CAAsBE,KAAvC;AACA,QAAMX,QAAQ,GAAGO,KAAK,CAACG,MAAN,CAAaV,QAAb,CAAsBW,KAAvC;AACAb,EAAAA,KAAK,CAACW,QAAD,EAAWT,QAAX,CAAL;AACH,CALD;;AAOA,MAAMY,SAAS,GAAG,MACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAM,EAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAuB,EAAA,IAAI,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAuB,EAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CALJ,EASI;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATJ,CADJ,CADJ;;AAgBA,eAAeM,SAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\n\nconst LOGIN = gql`\nquery($email: String, $password: String) {\n    login(email: $email,password: $password){\n      token\n    }\n  }\n`\n\ninterface tokenData {\n    token: string;\n}\ninterface loginVars {\n    email: string;\n    password: string;\n}\n\nconst login = (email: string, password: string) => {\n    console.log({ email, password });\n    const { loading, data } = useQuery<tokenData, loginVars>(\n        LOGIN,\n        { variables: { email, password } }\n    );\n    console.log({ loading, data })\n}\n\nconst handleSubmit = (event: any) => {\n    event.preventDefault();\n    const username = event.target.username.value;\n    const password = event.target.password.value;\n    login(username, password);\n}\n\nconst LoginForm = () => (\n    <div>\n        <form onSubmit={handleSubmit}>\n            <label>\n                Username:\n                <input name=\"username\" type=\"text\" />\n            </label>\n            <label>\n                Password:\n                <input name=\"password\" type=\"password\" />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n        </form >\n    </div>\n);\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}