{"ast":null,"code":"import { getValidationError } from \"./getValidationError\";\n/* Break this into a signin error which then calls the validation error which can be used elsewhere*/\n\nexport var getGraphQLUserRegisterError = function getGraphQLUserRegisterError(errorResponse) {\n  console.log(errorResponse.graphQLErrors);\n\n  if (errorResponse.message.includes(\"duplicate key error\")) {\n    return {\n      form: \"User Already Exists\"\n    };\n  }\n\n  return getValidationError(errorResponse);\n};","map":{"version":3,"sources":["/app/utils/getGraphQLUserRegisterError.ts"],"names":["getValidationError","getGraphQLUserRegisterError","errorResponse","console","log","graphQLErrors","message","includes","form"],"mappings":"AACA,SAASA,kBAAT;AACA;;AACA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CACvCC,aADuC,EAItC;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,aAA1B;;AACA,MAAIH,aAAa,CAACI,OAAd,CAAsBC,QAAtB,CAA+B,qBAA/B,CAAJ,EAA2D;AACvD,WAAO;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAP;AACH;;AACD,SAAOR,kBAAkB,CAACE,aAAD,CAAzB;AACH,CAVM","sourcesContent":["import { GraphQLError } from \"graphql\";\nimport { getValidationError } from \"./getValidationError\";\n/* Break this into a signin error which then calls the validation error which can be used elsewhere*/\nexport const getGraphQLUserRegisterError = (\n    errorResponse: Error & {\n        graphQLErrors?: GraphQLError[];\n    }\n) => {\n    console.log(errorResponse.graphQLErrors);\n    if (errorResponse.message.includes(\"duplicate key error\")) {\n        return { form: \"User Already Exists\" };\n    }\n    return getValidationError(errorResponse);\n};\n"]},"metadata":{},"sourceType":"module"}