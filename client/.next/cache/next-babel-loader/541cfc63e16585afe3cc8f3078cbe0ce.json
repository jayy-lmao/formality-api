{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/app/pages/register.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { gql } from 'apollo-boost';\nimport { useMutation } from \"@apollo/react-hooks\";\nconst REGISTER_USER = gql`\nmutation($email: String, $password: String) {\n    createUser(email: $email,password: $password){\n        id\n        email\n    }\n  }\n`;\n\nconst Register = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      alert(_JSON$stringify(values, null, 2));\n    }\n  });\n  const [register, {\n    data\n  }] = useMutation(REGISTER_USER);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Email address\", __jsx(\"input\", {\n    name: \"email\",\n    id: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Email address\", __jsx(\"input\", {\n    name: \"password\",\n    id: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"SignUp\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["/app/pages/register.tsx"],"names":["React","useFormik","gql","useMutation","REGISTER_USER","Register","formik","initialValues","email","password","onSubmit","values","alert","register","data","handleSubmit","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAGF,GAAI;;;;;;;CAA1B;;AASA,MAAMG,QAAQ,GAAG,MAAM;AACnB,QAAMC,MAAM,GAAGL,SAAS,CAAC;AACrBM,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADM;AAKrBC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBC,MAAAA,KAAK,CAAC,gBAAeD,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACH;AAPoB,GAAD,CAAxB;AASA,QAAM,CAACE,QAAD,EAAW;AAACC,IAAAA;AAAD,GAAX,IAAqBX,WAAW,CAACC,aAAD,CAAtC;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEE,MAAM,CAACS,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,EAAET,MAAM,CAACU,YAJrB;AAKI,IAAA,KAAK,EAAEV,MAAM,CAACK,MAAP,CAAcH,KALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAWI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAEF,MAAM,CAACU,YAJrB;AAKI,IAAA,KAAK,EAAEV,MAAM,CAACK,MAAP,CAAcF,QALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXJ,EAqBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CADJ,CADJ;AA2BH,CAtCD;;AAwCA,eAAeJ,QAAf","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { gql } from 'apollo-boost';\nimport { useMutation } from \"@apollo/react-hooks\";\n\nconst REGISTER_USER = gql`\nmutation($email: String, $password: String) {\n    createUser(email: $email,password: $password){\n        id\n        email\n    }\n  }\n`\n\nconst Register = () => {\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n        },\n        onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n    const [register, {data}] = useMutation(REGISTER_USER)\n    return (\n        <div>\n            <form onSubmit={formik.handleSubmit}>\n                <label htmlFor=\"email\">\n                    Email address\n                    <input\n                        name=\"email\"\n                        id=\"email\"\n                        type=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Email address\n                    <input\n                        name=\"password\"\n                        id=\"password\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                </label>\n                <button type=\"submit\">SignUp</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}