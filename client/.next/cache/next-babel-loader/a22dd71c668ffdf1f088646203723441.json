{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/taggedTemplateLiteral\";\nvar _jsxFileName = \"/app/pages/register.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($email: String!, $password: String!) {\\n        createUser(data: { email: $email, password: $password }) {\\n            id\\n            email\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { getGraphQLUserRegisterError } from \"../utils/getGraphQLUserRegisterError\";\nimport Router from \"next/router\";\nimport Input from \"../components/Input\";\nvar REGISTER_USER = gql(_templateObject());\n\nvar Register = function Register() {\n  var _useMutation = useMutation(REGISTER_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      registerUser = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(_ref, _ref2) {\n      var email = _ref.email,\n          password = _ref.password;\n      var setErrors = _ref2.setErrors;\n      registerUser({\n        variables: {\n          email: email,\n          password: password\n        }\n      }).then(function (_ref3) {\n        var createUser = _ref3.data.createUser;\n        console.log(createUser);\n        Router.push(\"/login\");\n      })[\"catch\"](function (responseErrors) {\n        setErrors(getGraphQLUserRegisterError(responseErrors));\n      });\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Register\"), __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Input, {\n    label: \"Email\",\n    name: \"email\",\n    id: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(Input, {\n    label: \"Password\",\n    name: \"password\",\n    id: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"SignUp\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["/app/pages/register.tsx"],"names":["React","useFormik","gql","useMutation","getGraphQLUserRegisterError","Router","Input","REGISTER_USER","Register","registerUser","data","formik","initialValues","email","password","onSubmit","setErrors","variables","then","createUser","console","log","push","responseErrors","handleSubmit","handleChange","values"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAAwC,QAAxC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,2BAAT;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP;AAEA,IAAMC,aAAa,GAAGL,GAAH,mBAAnB;;AASA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,qBACgBL,WAAW,CAACI,aAAD,CAD3B;AAAA;AAAA,MACXE,YADW;AAAA,MACKC,IADL,oBACKA,IADL;;AAEnB,MAAMC,MAAM,GAAGV,SAAS,CAAC;AACrBW,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADM;AAKrBC,IAAAA,QAAQ,EAAE,+BAAwC;AAAA,UAArCF,KAAqC,QAArCA,KAAqC;AAAA,UAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,UAAhBE,SAAgB,SAAhBA,SAAgB;AAC9CP,MAAAA,YAAY,CAAC;AACTQ,QAAAA,SAAS,EAAE;AACPJ,UAAAA,KAAK,EAALA,KADO;AAEPC,UAAAA,QAAQ,EAARA;AAFO;AADF,OAAD,CAAZ,CAMKI,IANL,CAMU,iBAA8B;AAAA,YAAnBC,UAAmB,SAA3BT,IAA2B,CAAnBS,UAAmB;AAChCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAd,QAAAA,MAAM,CAACiB,IAAP,CAAY,QAAZ;AACH,OATL,WAUW,UAACC,cAAD,EAAoB;AACvBP,QAAAA,SAAS,CAACZ,2BAA2B,CAACmB,cAAD,CAA5B,CAAT;AACH,OAZL;AAaH;AAnBoB,GAAD,CAAxB;AAsBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,IAAA,QAAQ,EAAEZ,MAAM,CAACa,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,EAAE,EAAC,OAHP;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,IAAA,QAAQ,EAAEb,MAAM,CAACc,YALrB;AAMI,IAAA,KAAK,EAAEd,MAAM,CAACe,MAAP,CAAcb,KANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,MAAC,KAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,QAAQ,EAAEF,MAAM,CAACc,YALrB;AAMI,IAAA,KAAK,EAAEd,MAAM,CAACe,MAAP,CAAcZ,QANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAkBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,CAFJ,CADJ;AAyBH,CAjDD;;AAmDA,eAAeN,QAAf","sourcesContent":["import React from \"react\";\nimport { useFormik, ErrorMessage } from \"formik\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { getGraphQLUserRegisterError } from \"../utils/getGraphQLUserRegisterError\";\nimport Router from \"next/router\";\nimport Input from \"../components/Input\";\n\nconst REGISTER_USER = gql`\n    mutation($email: String!, $password: String!) {\n        createUser(data: { email: $email, password: $password }) {\n            id\n            email\n        }\n    }\n`;\n\nconst Register = () => {\n    const [ registerUser, { data } ] = useMutation(REGISTER_USER);\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n        },\n        onSubmit: ({ email, password }, { setErrors }) => {\n            registerUser({\n                variables: {\n                    email,\n                    password,\n                },\n            })\n                .then(({ data: { createUser } }) => {\n                    console.log(createUser);\n                    Router.push(\"/login\");\n                })\n                .catch((responseErrors) => {\n                    setErrors(getGraphQLUserRegisterError(responseErrors));\n                });\n        },\n    });\n\n    return (\n        <div>\n            <h1>Register</h1>\n            <form onSubmit={formik.handleSubmit}>\n                <Input\n                    label=\"Email\"\n                    name=\"email\"\n                    id=\"email\"\n                    type=\"email\"\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                />\n                <Input\n                    label=\"Password\"\n                    name=\"password\"\n                    id=\"password\"\n                    type=\"password\"\n                    onChange={formik.handleChange}\n                    value={formik.values.password}\n                />\n                {/* <ErrorMessage name=\"password\" /> */}\n                <button type=\"submit\">SignUp</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}