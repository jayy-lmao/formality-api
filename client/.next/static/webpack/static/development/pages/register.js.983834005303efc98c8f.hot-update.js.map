{"version":3,"file":"static/webpack/static/development/pages/register.js.983834005303efc98c8f.hot-update.js","sources":["webpack:///./pages/register.tsx"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { GraphQLError } from \"graphql\";\n\nconst REGISTER_USER = gql`\n    mutation($email: String!, $password: String!) {\n        createUser(data: { email: $email, password: $password }) {\n            id\n            email\n        }\n    }\n`;\n\nconst Register = () => {\n    const [ registerUser, { data } ] = useMutation(REGISTER_USER);\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n        },\n        onSubmit: ({ email, password }) => {\n            registerUser({\n                variables: {\n                    email,\n                    password,\n                },\n            })\n                .then(({ data: { createUser } }) => {\n                    console.log(createUser);\n                })\n                .catch((errorResponse) => {\n                    console.log({ gqlErrs: errorResponse.graphQLErrors });\n                    if (errorResponse.message.includes(\"duplicate key error\")) {\n                        console.error(\"User Already Exists\");\n                    } else if (errorResponse.graphQLErrors[0].extensions.exception.validationErrors[0].constraints) {\n                        console.log(Object.values(errorResponse.graphQLErrors[0].extensions.constraints))\n                    }\n                });\n        },\n    });\n\n    return (\n        <div>\n            <form onSubmit={formik.handleSubmit}>\n                <label htmlFor=\"email\">\n                    Email address\n                    <input\n                        name=\"email\"\n                        id=\"email\"\n                        type=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Email address\n                    <input\n                        name=\"password\"\n                        id=\"password\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                </label>\n                <button type=\"submit\">SignUp</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AA0BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}