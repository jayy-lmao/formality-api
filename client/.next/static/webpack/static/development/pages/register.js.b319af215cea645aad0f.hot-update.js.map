{"version":3,"file":"static/webpack/static/development/pages/register.js.b319af215cea645aad0f.hot-update.js","sources":["webpack:///./pages/register.tsx","webpack:///./styles/buttonStyle.tsx"],"sourcesContent":["import React from \"react\";\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { useFormik, ErrorMessage } from \"formik\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { getGraphQLUserRegisterError } from \"../utils/getGraphQLUserRegisterError\";\nimport Router from \"next/router\";\nimport Input from \"../components/Input\";\nimport { userDetailsCard } from \"../styles/userDetailsCard\";\nimport { buttonStyle } from \"../styles/buttonStyle\";\njsx;\n\nconst REGISTER_USER = gql`\n    mutation($email: String!, $password: String!) {\n        createUser(data: { email: $email, password: $password }) {\n            id\n            email\n        }\n    }\n`;\n\nconst Register = () => {\n    const [ registerUser, { data } ] = useMutation(REGISTER_USER);\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n        },\n        onSubmit: ({ email, password }, { setErrors }) => {\n            registerUser({\n                variables: {\n                    email,\n                    password,\n                },\n            })\n                .then(({ data: { createUser } }) => {\n                    console.log(createUser);\n                    Router.push(\"/login\");\n                })\n                .catch((responseErrors) => {\n                    setErrors(getGraphQLUserRegisterError(responseErrors));\n                });\n        },\n    });\n\n    return (\n        <div css={userDetailsCard}>\n            <h1>Register</h1>\n            <form onSubmit={formik.handleSubmit}>\n                <Input\n                    label=\"Email\"\n                    name=\"email\"\n                    id=\"email\"\n                    type=\"email\"\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                />\n                <Input\n                    label=\"Password\"\n                    name=\"password\"\n                    id=\"password\"\n                    type=\"password\"\n                    onChange={formik.handleChange}\n                    value={formik.values.password}\n                />\n                {/* <ErrorMessage name=\"password\" /> */}\n                <button css={buttonStyle} type=\"submit\">\n                    SignUp\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n","import { css } from \"@emotion/core\";\nexport const buttonStyle = css`\n    background-color: cyan;\n    border-radius: 5px;\n    border: 0;\n    width: 80px;\n    height:25px;\n    margin: auto;\n    transition:all.5s ease;\n    display: block;\n    width: 125px;\n    height: 40px;\n    &:hover {\n        background-color: yellow;\n    }\n    &:active {\n        background-color: blue;\n    }\n    &:disabled {\n        background-color: grey;\n    }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAnBA;AAsBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;AC3EA;AACA,oCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}